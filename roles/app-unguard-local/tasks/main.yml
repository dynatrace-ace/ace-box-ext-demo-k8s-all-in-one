# Copyright 2024 Dynatrace LLC
#
# Licensed under the Apache License, Version 2.0 (the "License");
# you may not use this file except in compliance with the License.
# You may obtain a copy of the License at
#
#     https://www.apache.org/licenses/LICENSE-2.0
#
# Unless required by applicable law or agreed to in writing, software
# distributed under the License is distributed on an "AS IS" BASIS,
# WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.
# See the License for the specific language governing permissions and
# limitations under the License.

---

# Deploy MariaDB from bitnami repository
- name: Add bitnami chart repo
  kubernetes.core.helm_repository:
    name: bitnami
    repo_url: "https://charts.bitnami.com/bitnami"

- name: Deploy MariaDB
  kubernetes.core.helm:
    name: unguard-mariadb
    chart_ref: bitnami/mariadb
    release_namespace: "{{ unguard_namespace }}"
    create_namespace: true
    wait: true
    wait_timeout: 10m

# Deploy Unguard
- name: Deploy Unguard
  kubernetes.core.helm:
    name: unguard
    chart_ref: "oci://ghcr.io/dynatrace-oss/unguard/chart/unguard"
    release_namespace: "{{ unguard_namespace }}"
    create_namespace: true
    wait: true
    wait_timeout: 10m
    values:
      tracing: 
        enabled: true
      localDev:
        enabled: false
      profileService:
        deployment:
          container:
            image:
              tag: "{{ unguard_image_tag }}"
      statusService:
        deployment:
          container:
            image:
              tag: "{{ unguard_image_tag }}"
      maliciousLoadGenerator: 
        deployment:
          container:
            image:
              tag: "{{ unguard_image_tag }}"
      adService:
        deployment:
          container:
            image:
              tag: "{{ unguard_image_tag }}"
      frontend: 
        deployment:
          container:
            image:
              tag: "{{ unguard_image_tag }}"
      microblogService: 
        deployment:
          container:
            image:
              tag: "{{ unguard_image_tag }}"
      proxyService: 
        deployment:
          container:
            image:
              tag: "{{ unguard_image_tag }}"
      userAuthService: 
        deployment:
          container:
            image:
              tag: "{{ unguard_image_tag }}"
      userSimulator:
        cronJob:
          jobTemplate: 
            container:
              image:
                tag: "{{ unguard_image_tag }}"
              env: 
                SIMULATE_PRIVATE_RANGES: "{{ unguard_simulate_private_ranges }}"


- name: Create Ingress for Unguard
  kubernetes.core.k8s:
    state: present
    definition:
      apiVersion: v1
      kind: Ingress
      metadata:
        name: "unguard"
        namespace: "{{ unguard_namespace }}"
        annotations:
          kubernetes.io/ingress.class: "{{ ingress_class }}"
        labels:
          app: unguard
      spec:
        rules:
          - host: "{{ unguard_domain }}"
            http:
                paths:
                  - path: /ui
                    pathType: Prefix
                    backend:
                      service:
                        name: unguard-frontend
                        port:
                          number: 80
                  - path: /ad-service
                    pathType: Prefix
                    backend:
                      service:
                        name: unguard-ad-service
                        port:
                          number: 80

- name: Add dashboard links
  include_tasks: add-dashboard-links.yml

# health check
- include_role:
    name: health-check
    tasks_from: application-availability
  vars:
    application_domain: "{{ unguard_domain }}/ui"