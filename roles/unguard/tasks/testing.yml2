- set_fact:
    git_username: "root"
    git_password: "supersecret"
    git_remote: "gitlab"
    git_org_name: "demo"
    repo_name: "unguard"

- name: Ensure repos directory
  ansible.builtin.file:
    path: "/home/{{ ace_box_user }}/repos"
    state: directory
    mode: '0755'

- set_fact:
    repo_src: "/home/{{ ace_box_user }}/repos/{{ repo_name }}"

- name: Validating repo directory
  ansible.builtin.stat:
    path: "{{ repo_src }}"
  register: repo_stat_result

- name: Validating repo directory
  ansible.builtin.stat:
    path: "{{ repo_src }}"
  register: repo_stat_result
- name: Source registry url
  kubernetes.core.k8s_info:
    kind: Service
    name: "registry"
    namespace: "container-registry"
  register: container_registry_svc_data

- set_fact:
    registry_url: "{{ container_registry_svc_data.resources[0].spec.clusterIP }}:{{ container_registry_svc_data.resources[0].spec.ports[0].port }}"

- name: Set Docker environment variables
  set_fact:
    docker_env:
      DOCKER_HOST: "tcp://docker:2376"
      DOCKER_TLS_VERIFY: 0
      DOCKER_CERT_PATH: "certs/client"
      DOCKER_DAEMON_OPTIONS: "{{ registry_url }}"

- block:
  - name: Setup new repo
    ansible.builtin.command: "git clone http://{{ git_username }}:{{ git_password }}@{{ git_endpoint }}/{{ git_org_name }}/{{ repo_name }}.git {{ repo_src }}"
    args:
      chdir: "/home/{{ ace_box_user }}/repos"  
  - name: Checkout main branch
    command: git checkout -b main
    args:
      chdir: "{{ repo_src }}"
  when: not repo_stat_result.stat.exists

- name: Check repo status
  ansible.builtin.command: "git rev-list --all --count"
  args:
    chdir: "{{ repo_src }}"
  register: git_rev_list_result
- set_fact:
    publish_new: "{{ True if git_rev_list_result.stdout == '0' else False }}"

- block:
  - name: Pull latest changes
    ansible.builtin.shell: |
      git pull
    args:
      chdir: "{{ repo_src }}"
  when: publish_new == False

- set_fact:
    default_excludes:
    - "--exclude=.git"
    custom_excludes: "{{ app_unguard_overwrites | default([]) | map(attribute='dest') }}"
    custom_includes: "{{ app_unguard_overwrites | default([]) | selectattr('src', 'defined') }}"

- set_fact:
    rsync_opts: "{{ default_excludes + (['--exclude='] | product(custom_excludes) | map('join') | list) }}"

- block:
  - name: Copy app-unguard repo content
    ansible.posix.synchronize:
      src: "{{ playbook_dir }}/roles/unguard/files/repos/unguard/"
      dest: "{{ repo_src }}"
      delete: true
      rsync_opts: "{{ rsync_opts }}"
  - ansible.posix.synchronize:
      src: "{{ item.src }}"
      dest: "{{ repo_src }}/{{ item.dest }}"
      delete: true
    loop: "{{ custom_includes }}"
  - name: Commit and push local changes
    ansible.builtin.shell: |
      git add -A
      git commit -am "Sync with local ACE-Box repo"
      git push -u origin main
    args:
      chdir: "{{ repo_src }}"
  when: publish_new == True